{% set values = resource | get_values %}
from pathlib import Path

from fhir.resources.valueset import ValueSet as _ValueSet

from oops_fhir.utils import (
    ValueSet,
    {% if values.concepts %} CodeSystemConcept {% endif %}
)

{% for i, e in values.imports.items() %}
from {{ i.__name__ }} import {{ ','.join(e['statement']) }}
{% endfor %}


__all__ = ['{{ resource.name | camel_case }}']

_resource = _ValueSet.parse_file(Path(__file__).with_suffix(".json"))


{% if values.passthrough %}
class {{ resource.name | camel_case }} ({{ values.passthrough }}):
    """
    {{ resource.title or resource.name}}

    {{ resource.description | wrap }}

    Status: {{ resource.status }} - Version: {{ resource.version }}

    {{ resource.url }}
    """

    class Meta:
        resource = _resource


{% else %}

class {{ resource.name | camel_case }}(ValueSet):
    """
    {{ resource.title or resource.name}}

    {{ resource.description | wrap }}

    Status: {{ resource.status }} - Version: {{ resource.version }}

    {{ resource.url }}
    """
    # TODO: fix this template issue1
    pass

    {% for k, v in values.concepts.items() %}
    {{ k }} = CodeSystemConcept({{ v.json() | json_to_py}})
    """ {{ v.definition or v.display }} """
    {% endfor %}

    class Meta:
        resource = _resource

{% endif %}
