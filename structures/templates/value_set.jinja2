{% set values = resource | get_values %}
from pathlib import Path

from fhir.resources.valueset import ValueSet

{% for i, e in values.imports.items() %}
from {{ i.__name__ }} import {{ ','.join(e) }}
{% endfor %}


__all__ = ['{{ resource.name | camel_case }}']

_resource = ValueSet.parse_file(Path(__file__).with_suffix(".json"))


class {{ resource.name | camel_case }}:
    """
    {{ resource.title or resource.name}}

    {{ resource.description | wrap }}

    Status: {{ resource.status }} - Version: {{ resource.version }}

    {{ resource.url }}
    """
    {% for k, v in values.imports.items() %}
    {% for x in v %}
    {{ x | snake_case }} = {{ x }}
    {% endfor %}
    {% endfor %}

    {% for k, v in values.concepts.items() %}
    {{ k }} = {{ v.json() | json_to_py}}
    """ {{ v.definition or v.display }} """
    {% endfor %}

    class Meta:
        resource = _resource
